From f1464fdb51d4e1bc8c4011f899b2a1fb5f58e5f2 Mon Sep 17 00:00:00 2001
From: Chilledheart <hukeyue@hotmail.com>
Date: Sat, 10 Dec 2022 22:36:19 +0800
Subject: [PATCH] gcc: fix using-if-exist

---
 include/cstdlib      | 2 ++
 include/ctime        | 4 ++++
 include/system_error | 4 ----
 3 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/include/cstdlib b/include/cstdlib
index 25c9de516..8f0e8ba6f 100644
--- a/include/cstdlib
+++ b/include/cstdlib
@@ -140,6 +140,7 @@ using ::mbtowc _LIBCPP_USING_IF_EXISTS;
 using ::wctomb _LIBCPP_USING_IF_EXISTS;
 using ::mbstowcs _LIBCPP_USING_IF_EXISTS;
 using ::wcstombs _LIBCPP_USING_IF_EXISTS;
+#if defined(__clang__)
 #if !defined(_LIBCPP_CXX03_LANG)
 using ::at_quick_exit _LIBCPP_USING_IF_EXISTS;
 using ::quick_exit _LIBCPP_USING_IF_EXISTS;
@@ -147,6 +148,7 @@ using ::quick_exit _LIBCPP_USING_IF_EXISTS;
 #if _LIBCPP_STD_VER > 14
 using ::aligned_alloc _LIBCPP_USING_IF_EXISTS;
 #endif
+#endif
 
 _LIBCPP_END_NAMESPACE_STD
 
diff --git a/include/ctime b/include/ctime
index 0c6e4dfd6..a07f299b7 100644
--- a/include/ctime
+++ b/include/ctime
@@ -59,9 +59,11 @@ using ::clock_t _LIBCPP_USING_IF_EXISTS;
 using ::size_t _LIBCPP_USING_IF_EXISTS;
 using ::time_t _LIBCPP_USING_IF_EXISTS;
 using ::tm _LIBCPP_USING_IF_EXISTS;
+#if defined(__clang__)
 #if _LIBCPP_STD_VER > 14
 using ::timespec _LIBCPP_USING_IF_EXISTS;
 #endif
+#endif
 using ::clock _LIBCPP_USING_IF_EXISTS;
 using ::difftime _LIBCPP_USING_IF_EXISTS;
 using ::mktime _LIBCPP_USING_IF_EXISTS;
@@ -71,9 +73,11 @@ using ::ctime _LIBCPP_USING_IF_EXISTS;
 using ::gmtime _LIBCPP_USING_IF_EXISTS;
 using ::localtime _LIBCPP_USING_IF_EXISTS;
 using ::strftime _LIBCPP_USING_IF_EXISTS;
+#if defined(__clang__)
 #if _LIBCPP_STD_VER > 14
 using ::timespec_get _LIBCPP_USING_IF_EXISTS;
 #endif
+#endif
 
 _LIBCPP_END_NAMESPACE_STD
 
diff --git a/include/system_error b/include/system_error
index 98919927b..990fb1473 100644
--- a/include/system_error
+++ b/include/system_error
@@ -281,7 +281,6 @@ public:
               typename enable_if<is_error_condition_enum<_Ep>::value>::type* = nullptr
                                                                      ) _NOEXCEPT
             {
-                using __adl_only::make_error_condition;
                 *this = make_error_condition(__e);
             }
 
@@ -301,7 +300,6 @@ public:
         >::type
         operator=(_Ep __e) _NOEXCEPT
             {
-                using __adl_only::make_error_condition;
                 *this = make_error_condition(__e);
                 return *this;
             }
@@ -351,7 +349,6 @@ public:
                    typename enable_if<is_error_code_enum<_Ep>::value>::type* = nullptr
                                                                      ) _NOEXCEPT
             {
-                using __adl_only::make_error_code;
                 *this = make_error_code(__e);
             }
 
@@ -371,7 +368,6 @@ public:
         >::type
         operator=(_Ep __e) _NOEXCEPT
             {
-                using __adl_only::make_error_code;
                 *this = make_error_code(__e);
                 return *this;
             }
-- 
2.37.1 (Apple Git-137.1)

