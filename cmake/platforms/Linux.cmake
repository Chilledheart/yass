set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)

set(CMAKE_SYSTEM_NAME "Linux")
set(CMAKE_SYSTEM_PROCESSOR "${GCC_SYSTEM_PROCESSOR}" CACHE STRING "")
set(CMAKE_C_COMPILER_TARGET "${GCC_TARGET}" CACHE STRING "")
set(CMAKE_CXX_COMPILER_TARGET "${GCC_TARGET}" CACHE STRING "")
set(CMAKE_ASM_COMPILER_TARGET "${GCC_TARGET}" CACHE STRING "")

set(CMAKE_AR "${LLVM_SYSROOT}/bin/llvm-ar" CACHE FILEPATH "")
set(CMAKE_CXX_COMPILER_AR "${LLVM_SYSROOT}/bin/llvm-ar" CACHE FILEPATH "")
set(CMAKE_RANLIB "${LLVM_SYSROOT}/bin/llvm-ranlib" CACHE FILEPATH "")
set(CMAKE_CXX_COMPILER_RANLIB "${LLVM_SYSROOT}/bin/llvm-ranlib" CACHE FILEPATH "")

set(CMAKE_SYSROOT "${GCC_SYSROOT}" CACHE STRING "")

set(COMPILE_FLAGS)

if (ASM_CPU)
  list(APPEND COMPILE_FLAGS -mcpu=${ARM_CPU})
endif()

string(REPLACE ";" " " COMPILE_FLAGS "${COMPILE_FLAGS}")

set(_CMAKE_ASM_FLAGS_INITIAL "${CMAKE_ASM_FLAGS}" CACHE STRING "")
set(CMAKE_ASM_FLAGS "${_CMAKE_ASM_FLAGS_INITIAL} ${COMPILE_FLAGS}" CACHE STRING "" FORCE)

set(_CMAKE_C_FLAGS_INITIAL "${CMAKE_C_FLAGS}" CACHE STRING "")
set(CMAKE_C_FLAGS "${_CMAKE_C_FLAGS_INITIAL} ${COMPILE_FLAGS}" CACHE STRING "" FORCE)

set(_CMAKE_CXX_FLAGS_INITIAL "${CMAKE_CXX_FLAGS}" CACHE STRING "")
set(CMAKE_CXX_FLAGS "${_CMAKE_CXX_FLAGS_INITIAL} ${COMPILE_FLAGS}" CACHE STRING "" FORCE)

# target environment on the build host system
set(CMAKE_FIND_ROOT_PATH ${GCC_SYSROOT})

# modify default behavior of FIND_XXX() commands
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
