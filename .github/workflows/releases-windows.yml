name: Build Artifacts (Windows)
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
  pull_request:
  push:
    branches: [master]
    paths-ignore: [README.md, BUILDING.md]
  release:
    types: [published]
defaults:
  run:
    shell: cmd
env:
  CACHE_EPOCH: 0
  GOPROXY: direct
jobs:
  windows-release:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, x86, arm64]
        crt-linkage: [static]
        build_type: [Release]
    env:
      BUILD_TYPE: '${{ matrix.build_type }}'
    steps:
      - uses: actions/checkout@v3
      - name: Checkout with shallow submodules
        run: |
          # unshallow must come first otherwise submodule may be get unshallowed
          git fetch --tags --unshallow
          git submodule update --init --depth 1
      - name: Cache clang, nasm and wixtoolset 3
        id: clang-cache
        uses: actions/cache@v3
        with:
          path: |
            third_party/nasm
            third_party/llvm-build/Release+Asserts
            third_party/wix311
          key: ${{ runner.os }}-toolchain-${{ hashFiles('CLANG_REVISION') }}-v${{ env.CACHE_EPOCH }}
          restore-keys: |
            ${{ runner.os }}-toolchain-${{ hashFiles('CLANG_REVISION') }}-
      - name: Cache golang
        uses: actions/cache@v3
        with:
          path: |
            %LocalAppData%\go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build build tool
        run: |
          cd tools
          go build
      - name: "Download dependency: clang, nasm and wixtoolset 3"
        if: ${{ steps.clang-cache.outputs.cache-hit != 'true' }}
        run: |
          scripts\download-toolchain.bat
          del /s /q nasm-2.15*.zip
          del /s /q third_party\llvm-build\Release+Asserts\*.tgz
          del /s /q wix311*.zip
      - name: Build
        run: |
          set VCToolsVersion=14.29
          set Winsdk=10.0.19041.0
          set "WindowsSDKVersion=%Winsdk%\"
          if "${{ matrix.arch }}" == "arm64" (call :SetNewVCToolsVersion)
          set vsdevcmd=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat
          set "VSCMD_START_DIR=%CD%"
          set "CC=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set "CXX=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set Platform=${{ matrix.arch }}

          set "Path=%CD%\third_party\nasm;%Path%"
          set "Path=%CD%\third_party\wix311;%Path%"

          call "%vsdevcmd%" -arch=%Platform% -host_arch=amd64 -winsdk=%Winsdk% -no_logo -vcvars_ver=%VCToolsVersion%

          tools\build -msvc-tgt-arch=${{ matrix.arch }} -msvc-crt-linkage=${{ matrix.crt-linkage }} -build-test || exit /b

          exit /b 0

          :SetNewVCToolsVersion
          set VCToolsVersion=
      - name: Run tests
        if: ${{ matrix.arch == 'x64' || matrix.arch == 'x86' }}
        run: |
          set VCToolsVersion=14.29
          set Winsdk=10.0.19041.0
          set "WindowsSDKVersion=%Winsdk%\"
          if "${{ matrix.arch }}" == "arm64" (call :SetNewVCToolsVersion)
          set vsdevcmd=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat
          set "VSCMD_START_DIR=%CD%"
          set "CC=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set "CXX=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set Platform=${{ matrix.arch }}

          set "Path=%CD%\third_party\nasm;%Path%"
          set "Path=%CD%\third_party\wix311;%Path%"

          call "%vsdevcmd%" -arch=%Platform% -host_arch=amd64 -winsdk=%Winsdk% -no_logo -vcvars_ver=%VCToolsVersion%

          tools\build -nc -msvc-tgt-arch=${{ matrix.arch }} -msvc-crt-linkage=${{ matrix.crt-linkage }} -run-test -no-packaging || exit /b

          exit /b 0

          :SetNewVCToolsVersion
          set VCToolsVersion=
      - name: Upload dist tarball (including debuginfo)
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload ${{ github.event.release.tag_name }} *.zip
      - name: Upload dist msi
        if: ${{ github.event_name == 'release' && matrix.arch != 'arm64' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload ${{ github.event.release.tag_name }} *.msi
  windows-xp-release:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        arch: [x86]
        crt-linkage: [static]
        build_type: [Release]
    env:
      BUILD_TYPE: '${{ matrix.build_type }}'
    steps:
      - uses: actions/checkout@v3
      - name: Checkout with shallow submodules
        run: |
          # unshallow must come first otherwise submodule may be get unshallowed
          git fetch --tags --unshallow
          git submodule update --init --depth 1
      - name: Cache clang, nasm and wixtoolset 3
        id: clang-cache
        uses: actions/cache@v3
        with:
          path: |
            third_party/nasm
            third_party/llvm-build/Release+Asserts
            third_party/wix311
          key: ${{ runner.os }}-toolchain-${{ hashFiles('CLANG_REVISION') }}-v${{ env.CACHE_EPOCH }}
          restore-keys: |
            ${{ runner.os }}-toolchain-${{ hashFiles('CLANG_REVISION') }}-
      - name: Cache golang
        uses: actions/cache@v3
        with:
          path: |
            %LocalAppData%\go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build build tool
        run: |
          cd tools
          go build
      - name: "Download dependency: clang, nasm and wixtoolset 3"
        if: ${{ steps.clang-cache.outputs.cache-hit != 'true' }}
        run: |
          scripts\download-toolchain.bat
          del /s /q third_party\nasm-2.15*.zip
          del /s /q third_party\llvm-build\Release+Asserts\*.tgz
          del /s /q third_party\wix311*.zip
      - name: Patch libcxx for windows xp
        shell: bash
        run: |
          cd third_party/libc++/trunk
          patch -p1 < ../winxp.patch
      - name: Build
        run: |
          set VCToolsVersion=14.16.27012
          set "VCINSTALLDIR=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC"
          set "WindowsSDKVersion=10.0.10240.0\"
          set "WindowsSdkDir=C:\Program Files (x86)\Windows Kits\10"
          set "PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\CMake\Ninja;%PATH%"

          set "CC=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set "CXX=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set Platform=${{ matrix.arch }}
          set VSCMD_ARG_TGT_ARCH=${{ matrix.arch }}

          set "Path=%CD%\third_party\nasm;%Path%"
          set "Path=%CD%\third_party\wix311;%Path%"

          call "scripts\callxp-%Platform%.cmd"

          tools\build -msvc-tgt-arch=${{ matrix.arch }} -msvc-crt-linkage=${{ matrix.crt-linkage }} -msvc-allow-xp -build-test || exit /b

          goto :eof
      - name: Run tests
        run: |
          set VCToolsVersion=14.16.27012
          set "VCINSTALLDIR=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC"
          set "WindowsSDKVersion=10.0.10240.0\"
          set "WindowsSdkDir=C:\Program Files (x86)\Windows Kits\10"
          set "PATH=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\CMake\Ninja;%PATH%"

          set "CC=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set "CXX=%CD%\third_party\llvm-build\Release+Asserts\bin\clang-cl.exe"
          set Platform=${{ matrix.arch }}
          set VSCMD_ARG_TGT_ARCH=${{ matrix.arch }}

          set "Path=%CD%\third_party\nasm;%Path%"
          set "Path=%CD%\third_party\wix311;%Path%"

          call "scripts\callxp-%Platform%.cmd"

          tools\build -nc -msvc-tgt-arch=${{ matrix.arch }} -msvc-crt-linkage=${{ matrix.crt-linkage }} -msvc-allow-xp -run-test -no-packaging || exit /b

          goto :eof
      - name: Upload dist tarball (including debuginfo)
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          gh release upload ${{ github.event.release.tag_name }} *.msi *.zip
