name: Build Artifacts (Linux)
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
  pull_request:
  push:
    branches: [master]
    paths-ignore: [README.md, BUILDING.md]
  release:
    types: [published]
defaults:
  run:
    shell: bash
env:
  CACHE_EPOCH: 11
  GOPROXY: direct
jobs:
  docker_publish:
    strategy:
      fail-fast: false
      matrix:
        container:
        - 'centos8'
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker Image
        run: |
          docker build --cache-from ghcr.io/chilledheart/${{ matrix.container }} \
            -f docker/${{ matrix.container }}.Dockerfile \
            -t ghcr.io/chilledheart/${{ matrix.container }} \
            docker
      - name: Push Docker Image
        run: |
          docker push ghcr.io/chilledheart/${{ matrix.container }}
  centos-release:
    strategy:
      fail-fast: false
      matrix:
        container:
        - 'centos8'
    runs-on: ubuntu-18.04
    needs: docker_publish
    container: 'ghcr.io/chilledheart/${{ matrix.container }}'
    env:
      DISTRO: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v2
      - name: Checkout with shallow submodules
        run: |
          # unshallow must come first otherwise submodule may be get unshallowed
          git fetch --tags --unshallow
          git submodule update --init --depth 1
      - name: Build RPM packages
        run: |
          ./scripts/build-rpm.sh
      - name: Upload dist tarball (including debuginfo)
        if: ${{ github.event_name == 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} yass*.rpm
