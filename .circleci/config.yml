# Copyright (c) 2023 Chilledheart

# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
  update-submodule:
    steps:
      - run:
          command: |
            git submodule update --init --depth 1

  download-toolchain:
    steps:
      - run:
          command: |
            ./scripts/download-clang-prebuilt-binaries.py
            rm -f third_party/llvm-build/Release+Asserts/*.tgz

  download-toolchain-arm:
    steps:
      - run:
          command: |
            sudo apt-get update -qq
            sudo apt-get install -y clang

  install-deps:
    steps:
      - run:
          command: |
            sudo apt-get update -qq
            sudo apt-get install -y cmake ninja-build libgtk-3-dev libncurses5 gettext libcurl4-openssl-dev

  configure:
    steps:
      - run:
          command: |
            export "CC=$PWD/third_party/llvm-build/Release+Asserts/bin/clang"
            export "CXX=$PWD/third_party/llvm-build/Release+Asserts/bin/clang++"
            mkdir build
            cd build
            cmake -G Ninja -DGUI=on -DBUILD_TESTS=on ..

  configure-without-libcxx:
    steps:
      - run:
          command: |
            export "CC=$PWD/third_party/llvm-build/Release+Asserts/bin/clang"
            export "CXX=$PWD/third_party/llvm-build/Release+Asserts/bin/clang++"
            mkdir build
            cd build
            cmake -G Ninja -DGUI=on -DBUILD_TESTS=on -DUSE_LIBCXX=off ..

  configure-without-curl:
    steps:
      - run:
          command: |
            export "CC=$PWD/third_party/llvm-build/Release+Asserts/bin/clang"
            export "CXX=$PWD/third_party/llvm-build/Release+Asserts/bin/clang++"
            mkdir build
            cd build
            cmake -G Ninja -DGUI=on -DBUILD_TESTS=on -DUSE_CURL=off ..

  configure-without-nghttp2:
    steps:
      - run:
          command: |
            export "CC=$PWD/third_party/llvm-build/Release+Asserts/bin/clang"
            export "CXX=$PWD/third_party/llvm-build/Release+Asserts/bin/clang++"
            mkdir build
            cd build
            cmake -G Ninja -DGUI=on -DBUILD_TESTS=on -DUSE_NGHTTP2=off ..

  configure-arm:
    steps:
      - run:
          command: |
            export "CC=clang"
            export "CXX=clang++"
            mkdir build
            cd build
            cmake -G Ninja -DGUI=on -DBUILD_TESTS=on ..

  build:
    steps:
      - run:
          command: |
            ninja -C build yass yass_test

  test:
    steps:
      - run: ninja -C build check

executors:
  ubuntu:
    machine:
      image: ubuntu-2004:202010-01

jobs:
  basic:
    executor: ubuntu
    steps:
      - checkout
      - update-submodule
      - install-deps
      - download-toolchain
      - configure
      - build
      - test

  basic-without-libcxx:
    executor: ubuntu
    steps:
      - checkout
      - update-submodule
      - install-deps
      - download-toolchain
      - configure-without-libcxx
      - build
      - test

  basic-without-curl:
    executor: ubuntu
    steps:
      - checkout
      - update-submodule
      - install-deps
      - download-toolchain
      - configure-without-curl
      - build
      - test

  basic-without-nghttp2:
    executor: ubuntu
    steps:
      - checkout
      - update-submodule
      - install-deps
      - download-toolchain
      - configure-without-nghttp2
      - build
      - test

  arm:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - checkout
      - update-submodule
      - install-deps
      - download-toolchain-arm
      - configure-arm
      - build
      - test

workflows:
  x64-basic:
    jobs:
      - basic

  x64-basic-without-libcxx:
    jobs:
      - basic-without-libcxx

  x64-basic-without-curl:
    jobs:
      - basic-without-curl

  x64-basic-without-nghttp2:
    jobs:
      - basic-without-nghttp2

  arm-basic:
    jobs:
      - basic
